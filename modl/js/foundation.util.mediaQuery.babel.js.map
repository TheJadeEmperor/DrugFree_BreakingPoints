{"version":3,"sources":["foundation/foundation.util.mediaQuery.js"],"names":[],"mappings":"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","file":"foundation.util.mediaQuery.babel.js","sourcesContent":["'use strict';\n\n!function($) {\n\n// Default set of media queries\nconst defaultQueries = {\n  'default' : 'only screen',\n  landscape : 'only screen and (orientation: landscape)',\n  portrait : 'only screen and (orientation: portrait)',\n  retina : 'only screen and (-webkit-min-device-pixel-ratio: 2),' +\n    'only screen and (min--moz-device-pixel-ratio: 2),' +\n    'only screen and (-o-min-device-pixel-ratio: 2/1),' +\n    'only screen and (min-device-pixel-ratio: 2),' +\n    'only screen and (min-resolution: 192dpi),' +\n    'only screen and (min-resolution: 2dppx)'\n};\n\nvar MediaQuery = {\n  queries: [],\n\n  current: '',\n\n  /**\n   * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\n   * @function\n   * @private\n   */\n  _init() {\n    var self = this;\n    var extractedStyles = $('.foundation-mq').css('font-family');\n    var namedQueries;\n\n    namedQueries = parseStyleToObject(extractedStyles);\n\n    for (var key in namedQueries) {\n      self.queries.push({\n        name: key,\n        value: `only screen and (min-width: ${namedQueries[key]})`\n      });\n    }\n\n    this.current = this._getCurrentSize();\n\n    this._watcher();\n  },\n\n  /**\n   * Checks if the screen is at least as wide as a breakpoint.\n   * @function\n   * @param {String} size - Name of the breakpoint to check.\n   * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\n   */\n  atLeast(size) {\n    var query = this.get(size);\n\n    if (query) {\n      return window.matchMedia(query).matches;\n    }\n\n    return false;\n  },\n\n  /**\n   * Gets the media query of a breakpoint.\n   * @function\n   * @param {String} size - Name of the breakpoint to get.\n   * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\n   */\n  get(size) {\n    for (var i in this.queries) {\n      var query = this.queries[i];\n      if (size === query.name) return query.value;\n    }\n\n    return null;\n  },\n\n  /**\n   * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n   * @function\n   * @private\n   * @returns {String} Name of the current breakpoint.\n   */\n  _getCurrentSize() {\n    var matched;\n\n    for (var i in this.queries) {\n      var query = this.queries[i];\n\n      if (window.matchMedia(query.value).matches) {\n        matched = query;\n      }\n    }\n\n    if (typeof matched === 'object') {\n      return matched.name;\n    } else {\n      return matched;\n    }\n  },\n\n  /**\n   * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\n   * @function\n   * @private\n   */\n  _watcher() {\n    $(window).on('resize.zf.mediaquery', () => {\n      var newSize = this._getCurrentSize();\n\n      if (newSize !== this.current) {\n        // Broadcast the media query change on the window\n        $(window).trigger('changed.zf.mediaquery', [newSize, this.current]);\n\n        // Change the current media query\n        this.current = newSize;\n      }\n    });\n  }\n};\n\nFoundation.MediaQuery = MediaQuery;\n\n// matchMedia() polyfill - Test a CSS media type/query in JS.\n// Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\nwindow.matchMedia || (window.matchMedia = function() {\n  'use strict';\n\n  // For browsers that support matchMedium api such as IE 9 and webkit\n  var styleMedia = (window.styleMedia || window.media);\n\n  // For those that don't support matchMedium\n  if (!styleMedia) {\n    var style   = document.createElement('style'),\n    script      = document.getElementsByTagName('script')[0],\n    info        = null;\n\n    style.type  = 'text/css';\n    style.id    = 'matchmediajs-test';\n\n    script.parentNode.insertBefore(style, script);\n\n    // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n    info = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\n\n    styleMedia = {\n      matchMedium(media) {\n        var text = `@media ${media}{ #matchmediajs-test { width: 1px; } }`;\n\n        // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n        if (style.styleSheet) {\n          style.styleSheet.cssText = text;\n        } else {\n          style.textContent = text;\n        }\n\n        // Test if media query is true or false\n        return info.width === '1px';\n      }\n    }\n  }\n\n  return function(media) {\n    return {\n      matches: styleMedia.matchMedium(media || 'all'),\n      media: media || 'all'\n    };\n  }\n}());\n\n// Thank you: https://github.com/sindresorhus/query-string\nfunction parseStyleToObject(str) {\n  var styleObject = {};\n\n  if (typeof str !== 'string') {\n    return styleObject;\n  }\n\n  str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n  if (!str) {\n    return styleObject;\n  }\n\n  styleObject = str.split('&').reduce(function(ret, param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = parts[0];\n    var val = parts[1];\n    key = decodeURIComponent(key);\n\n    // missing `=` should be `null`:\n    // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n    val = val === undefined ? null : decodeURIComponent(val);\n\n    if (!ret.hasOwnProperty(key)) {\n      ret[key] = val;\n    } else if (Array.isArray(ret[key])) {\n      ret[key].push(val);\n    } else {\n      ret[key] = [ret[key], val];\n    }\n    return ret;\n  }, {});\n\n  return styleObject;\n}\n\nFoundation.MediaQuery = MediaQuery;\n\n}(jQuery);\n"]}