{"version":3,"sources":["foundation/foundation.util.box.js"],"names":[],"mappings":"AAAA;;AAEA,CAAC,UAAS,CAAT,EAAY;;AAEb,aAAW,GAAX,GAAiB;AACf,sBAAkB,gBAAlB;AACA,mBAAe,aAAf;AACA,gBAAY,UAAZ;GAHF;;;;;;;;;;;;AAFa,WAkBJ,gBAAT,CAA0B,OAA1B,EAAmC,MAAnC,EAA2C,MAA3C,EAAmD,MAAnD,EAA2D;AACzD,QAAI,UAAU,cAAc,OAAd,CAAV;QACA,GADJ;QACS,MADT;QACiB,IADjB;QACuB,KADvB,CADyD;;AAIzD,QAAI,MAAJ,EAAY;AACV,UAAI,UAAU,cAAc,MAAd,CAAV,CADM;;AAGV,eAAU,QAAQ,MAAR,CAAe,GAAf,GAAqB,QAAQ,MAAR,IAAkB,QAAQ,MAAR,GAAiB,QAAQ,MAAR,CAAe,GAAf,CAHxD;AAIV,YAAU,QAAQ,MAAR,CAAe,GAAf,IAAsB,QAAQ,MAAR,CAAe,GAAf,CAJtB;AAKV,aAAU,QAAQ,MAAR,CAAe,IAAf,IAAuB,QAAQ,MAAR,CAAe,IAAf,CALvB;AAMV,cAAU,QAAQ,MAAR,CAAe,IAAf,GAAsB,QAAQ,KAAR,IAAiB,QAAQ,KAAR,CANvC;KAAZ,MAQK;AACH,eAAU,QAAQ,MAAR,CAAe,GAAf,GAAqB,QAAQ,MAAR,IAAkB,QAAQ,UAAR,CAAmB,MAAnB,GAA4B,QAAQ,UAAR,CAAmB,MAAnB,CAA0B,GAA1B,CAD1E;AAEH,YAAU,QAAQ,MAAR,CAAe,GAAf,IAAsB,QAAQ,UAAR,CAAmB,MAAnB,CAA0B,GAA1B,CAF7B;AAGH,aAAU,QAAQ,MAAR,CAAe,IAAf,IAAuB,QAAQ,UAAR,CAAmB,MAAnB,CAA0B,IAA1B,CAH9B;AAIH,cAAU,QAAQ,MAAR,CAAe,IAAf,GAAsB,QAAQ,KAAR,IAAiB,QAAQ,UAAR,CAAmB,KAAnB,CAJ9C;KARL;;AAeA,QAAI,UAAU,CAAC,MAAD,EAAS,GAAT,EAAc,IAAd,EAAoB,KAApB,CAAV,CAnBqD;;AAqBzD,QAAI,MAAJ,EAAY;AACV,aAAO,SAAS,KAAT,KAAmB,IAAnB,CADG;KAAZ;;AAIA,QAAI,MAAJ,EAAY;AACV,aAAO,QAAQ,MAAR,KAAmB,IAAnB,CADG;KAAZ;;AAIA,WAAO,QAAQ,OAAR,CAAgB,KAAhB,MAA2B,CAAC,CAAD,CA7BuB;GAA3D;;;;;;;;;AAlBa,WAyDJ,aAAT,CAAuB,IAAvB,EAA6B,IAA7B,EAAkC;AAChC,WAAO,KAAK,MAAL,GAAc,KAAK,CAAL,CAAd,GAAwB,IAAxB,CADyB;;AAGhC,QAAI,SAAS,MAAT,IAAmB,SAAS,QAAT,EAAmB;AACxC,YAAM,IAAI,KAAJ,CAAU,8CAAV,CAAN,CADwC;KAA1C;;AAIA,QAAI,OAAO,KAAK,qBAAL,EAAP;QACA,UAAU,KAAK,UAAL,CAAgB,qBAAhB,EAAV;QACA,UAAU,SAAS,IAAT,CAAc,qBAAd,EAAV;QACA,OAAO,OAAO,WAAP;QACP,OAAO,OAAO,WAAP,CAXqB;;AAahC,WAAO;AACL,aAAO,KAAK,KAAL;AACP,cAAQ,KAAK,MAAL;AACR,cAAQ;AACN,aAAK,KAAK,GAAL,GAAW,IAAX;AACL,cAAM,KAAK,IAAL,GAAY,IAAZ;OAFR;AAIA,kBAAY;AACV,eAAO,QAAQ,KAAR;AACP,gBAAQ,QAAQ,MAAR;AACR,gBAAQ;AACN,eAAK,QAAQ,GAAR,GAAc,IAAd;AACL,gBAAM,QAAQ,IAAR,GAAe,IAAf;SAFR;OAHF;AAQA,kBAAY;AACV,eAAO,QAAQ,KAAR;AACP,gBAAQ,QAAQ,MAAR;AACR,gBAAQ;AACN,eAAK,IAAL;AACA,gBAAM,IAAN;SAFF;OAHF;KAfF,CAbgC;GAAlC;;;;;;;;;;;;;;AAzDa,WA4GJ,UAAT,CAAoB,OAApB,EAA6B,MAA7B,EAAqC,QAArC,EAA+C,OAA/C,EAAwD,OAAxD,EAAiE,UAAjE,EAA6E;AAC3E,QAAI,WAAW,cAAc,OAAd,CAAX;QACA,cAAc,SAAS,cAAc,MAAd,CAAT,GAAiC,IAAjC,CAFyD;;AAI3E,YAAQ,QAAR;AACE,WAAK,KAAL;AACE,eAAO;AACL,gBAAO,WAAW,GAAX,KAAmB,YAAY,MAAZ,CAAmB,IAAnB,GAA0B,SAAS,KAAT,GAAiB,YAAY,KAAZ,GAAoB,YAAY,MAAZ,CAAmB,IAAnB;AACzF,eAAK,YAAY,MAAZ,CAAmB,GAAnB,IAA0B,SAAS,MAAT,GAAkB,OAAlB,CAA1B;SAFP,CADF;AAKE,cALF;AADF,WAOO,MAAL;AACE,eAAO;AACL,gBAAM,YAAY,MAAZ,CAAmB,IAAnB,IAA2B,SAAS,KAAT,GAAiB,OAAjB,CAA3B;AACN,eAAK,YAAY,MAAZ,CAAmB,GAAnB;SAFP,CADF;AAKE,cALF;AAPF,WAaO,OAAL;AACE,eAAO;AACL,gBAAM,YAAY,MAAZ,CAAmB,IAAnB,GAA0B,YAAY,KAAZ,GAAoB,OAA9C;AACN,eAAK,YAAY,MAAZ,CAAmB,GAAnB;SAFP,CADF;AAKE,cALF;AAbF,WAmBO,YAAL;AACE,eAAO;AACL,gBAAM,WAAC,CAAY,MAAZ,CAAmB,IAAnB,GAA2B,YAAY,KAAZ,GAAoB,CAApB,GAA2B,SAAS,KAAT,GAAiB,CAAjB;AAC7D,eAAK,YAAY,MAAZ,CAAmB,GAAnB,IAA0B,SAAS,MAAT,GAAkB,OAAlB,CAA1B;SAFP,CADF;AAKE,cALF;AAnBF,WAyBO,eAAL;AACE,eAAO;AACL,gBAAM,aAAa,OAAb,GAAwB,WAAC,CAAY,MAAZ,CAAmB,IAAnB,GAA2B,YAAY,KAAZ,GAAoB,CAApB,GAA2B,SAAS,KAAT,GAAiB,CAAjB;AACrF,eAAK,YAAY,MAAZ,CAAmB,GAAnB,GAAyB,YAAY,MAAZ,GAAqB,OAA9C;SAFP,CADF;AAKE,cALF;AAzBF,WA+BO,aAAL;AACE,eAAO;AACL,gBAAM,YAAY,MAAZ,CAAmB,IAAnB,IAA2B,SAAS,KAAT,GAAiB,OAAjB,CAA3B;AACN,eAAK,WAAC,CAAY,MAAZ,CAAmB,GAAnB,GAA0B,YAAY,MAAZ,GAAqB,CAArB,GAA4B,SAAS,MAAT,GAAkB,CAAlB;SAF9D,CADF;AAKE,cALF;AA/BF,WAqCO,cAAL;AACE,eAAO;AACL,gBAAM,YAAY,MAAZ,CAAmB,IAAnB,GAA0B,YAAY,KAAZ,GAAoB,OAA9C,GAAwD,CAAxD;AACN,eAAK,WAAC,CAAY,MAAZ,CAAmB,GAAnB,GAA0B,YAAY,MAAZ,GAAqB,CAArB,GAA4B,SAAS,MAAT,GAAkB,CAAlB;SAF9D,CADF;AAKE,cALF;AArCF,WA2CO,QAAL;AACE,eAAO;AACL,gBAAM,QAAC,CAAS,UAAT,CAAoB,MAApB,CAA2B,IAA3B,GAAmC,SAAS,UAAT,CAAoB,KAApB,GAA4B,CAA5B,GAAmC,SAAS,KAAT,GAAiB,CAAjB;AAC7E,eAAK,QAAC,CAAS,UAAT,CAAoB,MAApB,CAA2B,GAA3B,GAAkC,SAAS,UAAT,CAAoB,MAApB,GAA6B,CAA7B,GAAoC,SAAS,MAAT,GAAkB,CAAlB;SAF9E,CADF;AAKE,cALF;AA3CF,WAiDO,QAAL;AACE,eAAO;AACL,gBAAM,CAAC,SAAS,UAAT,CAAoB,KAApB,GAA4B,SAAS,KAAT,CAA7B,GAA+C,CAA/C;AACN,eAAK,SAAS,UAAT,CAAoB,MAApB,CAA2B,GAA3B,GAAiC,OAAjC;SAFP,CADF;AAjDF,WAsDO,aAAL;AACE,eAAO;AACL,gBAAM,SAAS,UAAT,CAAoB,MAApB,CAA2B,IAA3B;AACN,eAAK,SAAS,UAAT,CAAoB,MAApB,CAA2B,GAA3B;SAFP,CADF;AAKE,cALF;AAtDF;AA6DI,eAAO;AACL,gBAAO,WAAW,GAAX,KAAmB,YAAY,MAAZ,CAAmB,IAAnB,GAA0B,SAAS,KAAT,GAAiB,YAAY,KAAZ,GAAoB,YAAY,MAAZ,CAAmB,IAAnB;AACzF,eAAK,YAAY,MAAZ,CAAmB,GAAnB,GAAyB,YAAY,MAAZ,GAAqB,OAA9C;SAFP,CADF;AA5DF,KAJ2E;GAA7E;CA5GC,CAoLC,MApLD,CAAD","file":"foundation.util.box.babel.js","sourcesContent":["'use strict';\n\n!function($) {\n\nFoundation.Box = {\n  ImNotTouchingYou: ImNotTouchingYou,\n  GetDimensions: GetDimensions,\n  GetOffsets: GetOffsets\n}\n\n/**\n * Compares the dimensions of an element to a container and determines collision events with container.\n * @function\n * @param {jQuery} element - jQuery object to test for collisions.\n * @param {jQuery} parent - jQuery object to use as bounding container.\n * @param {Boolean} lrOnly - set to true to check left and right values only.\n * @param {Boolean} tbOnly - set to true to check top and bottom values only.\n * @default if no parent object passed, detects collisions with `window`.\n * @returns {Boolean} - true if collision free, false if a collision in any direction.\n */\nfunction ImNotTouchingYou(element, parent, lrOnly, tbOnly) {\n  var eleDims = GetDimensions(element),\n      top, bottom, left, right;\n\n  if (parent) {\n    var parDims = GetDimensions(parent);\n\n    bottom = (eleDims.offset.top + eleDims.height <= parDims.height + parDims.offset.top);\n    top    = (eleDims.offset.top >= parDims.offset.top);\n    left   = (eleDims.offset.left >= parDims.offset.left);\n    right  = (eleDims.offset.left + eleDims.width <= parDims.width);\n  }\n  else {\n    bottom = (eleDims.offset.top + eleDims.height <= eleDims.windowDims.height + eleDims.windowDims.offset.top);\n    top    = (eleDims.offset.top >= eleDims.windowDims.offset.top);\n    left   = (eleDims.offset.left >= eleDims.windowDims.offset.left);\n    right  = (eleDims.offset.left + eleDims.width <= eleDims.windowDims.width);\n  }\n\n  var allDirs = [bottom, top, left, right];\n\n  if (lrOnly) {\n    return left === right === true;\n  }\n\n  if (tbOnly) {\n    return top === bottom === true;\n  }\n\n  return allDirs.indexOf(false) === -1;\n};\n\n/**\n * Uses native methods to return an object of dimension values.\n * @function\n * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\n * @returns {Object} - nested object of integer pixel values\n * TODO - if element is window, return only those values.\n */\nfunction GetDimensions(elem, test){\n  elem = elem.length ? elem[0] : elem;\n\n  if (elem === window || elem === document) {\n    throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\");\n  }\n\n  var rect = elem.getBoundingClientRect(),\n      parRect = elem.parentNode.getBoundingClientRect(),\n      winRect = document.body.getBoundingClientRect(),\n      winY = window.pageYOffset,\n      winX = window.pageXOffset;\n\n  return {\n    width: rect.width,\n    height: rect.height,\n    offset: {\n      top: rect.top + winY,\n      left: rect.left + winX\n    },\n    parentDims: {\n      width: parRect.width,\n      height: parRect.height,\n      offset: {\n        top: parRect.top + winY,\n        left: parRect.left + winX\n      }\n    },\n    windowDims: {\n      width: winRect.width,\n      height: winRect.height,\n      offset: {\n        top: winY,\n        left: winX\n      }\n    }\n  }\n}\n\n/**\n * Returns an object of top and left integer pixel values for dynamically rendered elements,\n * such as: Tooltip, Reveal, and Dropdown\n * @function\n * @param {jQuery} element - jQuery object for the element being positioned.\n * @param {jQuery} anchor - jQuery object for the element's anchor point.\n * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\n * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\n * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\n * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\n * TODO alter/rewrite to work with `em` values as well/instead of pixels\n */\nfunction GetOffsets(element, anchor, position, vOffset, hOffset, isOverflow) {\n  var $eleDims = GetDimensions(element),\n      $anchorDims = anchor ? GetDimensions(anchor) : null;\n\n  switch (position) {\n    case 'top':\n      return {\n        left: (Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left),\n        top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n      }\n      break;\n    case 'left':\n      return {\n        left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n        top: $anchorDims.offset.top\n      }\n      break;\n    case 'right':\n      return {\n        left: $anchorDims.offset.left + $anchorDims.width + hOffset,\n        top: $anchorDims.offset.top\n      }\n      break;\n    case 'center top':\n      return {\n        left: ($anchorDims.offset.left + ($anchorDims.width / 2)) - ($eleDims.width / 2),\n        top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n      }\n      break;\n    case 'center bottom':\n      return {\n        left: isOverflow ? hOffset : (($anchorDims.offset.left + ($anchorDims.width / 2)) - ($eleDims.width / 2)),\n        top: $anchorDims.offset.top + $anchorDims.height + vOffset\n      }\n      break;\n    case 'center left':\n      return {\n        left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n        top: ($anchorDims.offset.top + ($anchorDims.height / 2)) - ($eleDims.height / 2)\n      }\n      break;\n    case 'center right':\n      return {\n        left: $anchorDims.offset.left + $anchorDims.width + hOffset + 1,\n        top: ($anchorDims.offset.top + ($anchorDims.height / 2)) - ($eleDims.height / 2)\n      }\n      break;\n    case 'center':\n      return {\n        left: ($eleDims.windowDims.offset.left + ($eleDims.windowDims.width / 2)) - ($eleDims.width / 2),\n        top: ($eleDims.windowDims.offset.top + ($eleDims.windowDims.height / 2)) - ($eleDims.height / 2)\n      }\n      break;\n    case 'reveal':\n      return {\n        left: ($eleDims.windowDims.width - $eleDims.width) / 2,\n        top: $eleDims.windowDims.offset.top + vOffset\n      }\n    case 'reveal full':\n      return {\n        left: $eleDims.windowDims.offset.left,\n        top: $eleDims.windowDims.offset.top\n      }\n      break;\n    default:\n      return {\n        left: (Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left),\n        top: $anchorDims.offset.top + $anchorDims.height + vOffset\n      }\n  }\n}\n\n}(jQuery);\n"]}